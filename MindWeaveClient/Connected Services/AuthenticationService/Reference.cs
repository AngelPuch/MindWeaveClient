//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MindWeaveClient.AuthenticationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginDto", Namespace="http://schemas.datacontract.org/2004/07/MindWeaveServer.Contracts.DataContracts.A" +
        "uthentication")]
    [System.SerializableAttribute()]
    public partial class LoginDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResultDto", Namespace="http://schemas.datacontract.org/2004/07/MindWeaveServer.Contracts.DataContracts.A" +
        "uthentication")]
    [System.SerializableAttribute()]
    public partial class LoginResultDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string avatarPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MindWeaveClient.AuthenticationService.OperationResultDto operationResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string resultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string avatarPath {
            get {
                return this.avatarPathField;
            }
            set {
                if ((object.ReferenceEquals(this.avatarPathField, value) != true)) {
                    this.avatarPathField = value;
                    this.RaisePropertyChanged("avatarPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MindWeaveClient.AuthenticationService.OperationResultDto operationResult {
            get {
                return this.operationResultField;
            }
            set {
                if ((object.ReferenceEquals(this.operationResultField, value) != true)) {
                    this.operationResultField = value;
                    this.RaisePropertyChanged("operationResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.resultCodeField, value) != true)) {
                    this.resultCodeField = value;
                    this.RaisePropertyChanged("resultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultDto", Namespace="http://schemas.datacontract.org/2004/07/MindWeaveServer.Contracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class OperationResultDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfileDto", Namespace="http://schemas.datacontract.org/2004/07/MindWeaveServer.Contracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class UserProfileDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] avatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int genderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] avatar {
            get {
                return this.avatarField;
            }
            set {
                if ((object.ReferenceEquals(this.avatarField, value) != true)) {
                    this.avatarField = value;
                    this.RaisePropertyChanged("avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                if ((this.dateOfBirthField.Equals(value) != true)) {
                    this.dateOfBirthField = value;
                    this.RaisePropertyChanged("dateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int genderId {
            get {
                return this.genderIdField;
            }
            set {
                if ((this.genderIdField.Equals(value) != true)) {
                    this.genderIdField = value;
                    this.RaisePropertyChanged("genderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthenticationService.IAuthenticationManager")]
    public interface IAuthenticationManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationManager/login", ReplyAction="http://tempuri.org/IAuthenticationManager/loginResponse")]
        MindWeaveClient.AuthenticationService.LoginResultDto login(MindWeaveClient.AuthenticationService.LoginDto loginCredentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationManager/login", ReplyAction="http://tempuri.org/IAuthenticationManager/loginResponse")]
        System.Threading.Tasks.Task<MindWeaveClient.AuthenticationService.LoginResultDto> loginAsync(MindWeaveClient.AuthenticationService.LoginDto loginCredentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationManager/register", ReplyAction="http://tempuri.org/IAuthenticationManager/registerResponse")]
        MindWeaveClient.AuthenticationService.OperationResultDto register(MindWeaveClient.AuthenticationService.UserProfileDto userProfile, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationManager/register", ReplyAction="http://tempuri.org/IAuthenticationManager/registerResponse")]
        System.Threading.Tasks.Task<MindWeaveClient.AuthenticationService.OperationResultDto> registerAsync(MindWeaveClient.AuthenticationService.UserProfileDto userProfile, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationManager/verifyAccount", ReplyAction="http://tempuri.org/IAuthenticationManager/verifyAccountResponse")]
        MindWeaveClient.AuthenticationService.OperationResultDto verifyAccount(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationManager/verifyAccount", ReplyAction="http://tempuri.org/IAuthenticationManager/verifyAccountResponse")]
        System.Threading.Tasks.Task<MindWeaveClient.AuthenticationService.OperationResultDto> verifyAccountAsync(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationManager/resendVerificationCode", ReplyAction="http://tempuri.org/IAuthenticationManager/resendVerificationCodeResponse")]
        MindWeaveClient.AuthenticationService.OperationResultDto resendVerificationCode(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationManager/resendVerificationCode", ReplyAction="http://tempuri.org/IAuthenticationManager/resendVerificationCodeResponse")]
        System.Threading.Tasks.Task<MindWeaveClient.AuthenticationService.OperationResultDto> resendVerificationCodeAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationManager/sendPasswordRecoveryCode", ReplyAction="http://tempuri.org/IAuthenticationManager/sendPasswordRecoveryCodeResponse")]
        MindWeaveClient.AuthenticationService.OperationResultDto sendPasswordRecoveryCode(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationManager/sendPasswordRecoveryCode", ReplyAction="http://tempuri.org/IAuthenticationManager/sendPasswordRecoveryCodeResponse")]
        System.Threading.Tasks.Task<MindWeaveClient.AuthenticationService.OperationResultDto> sendPasswordRecoveryCodeAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationManager/resetPasswordWithCode", ReplyAction="http://tempuri.org/IAuthenticationManager/resetPasswordWithCodeResponse")]
        MindWeaveClient.AuthenticationService.OperationResultDto resetPasswordWithCode(string email, string code, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationManager/resetPasswordWithCode", ReplyAction="http://tempuri.org/IAuthenticationManager/resetPasswordWithCodeResponse")]
        System.Threading.Tasks.Task<MindWeaveClient.AuthenticationService.OperationResultDto> resetPasswordWithCodeAsync(string email, string code, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAuthenticationManager/logOut")]
        void logOut(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAuthenticationManager/logOut")]
        System.Threading.Tasks.Task logOutAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationManagerChannel : MindWeaveClient.AuthenticationService.IAuthenticationManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationManagerClient : System.ServiceModel.ClientBase<MindWeaveClient.AuthenticationService.IAuthenticationManager>, MindWeaveClient.AuthenticationService.IAuthenticationManager {
        
        public AuthenticationManagerClient() {
        }
        
        public AuthenticationManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MindWeaveClient.AuthenticationService.LoginResultDto login(MindWeaveClient.AuthenticationService.LoginDto loginCredentials) {
            return base.Channel.login(loginCredentials);
        }
        
        public System.Threading.Tasks.Task<MindWeaveClient.AuthenticationService.LoginResultDto> loginAsync(MindWeaveClient.AuthenticationService.LoginDto loginCredentials) {
            return base.Channel.loginAsync(loginCredentials);
        }
        
        public MindWeaveClient.AuthenticationService.OperationResultDto register(MindWeaveClient.AuthenticationService.UserProfileDto userProfile, string password) {
            return base.Channel.register(userProfile, password);
        }
        
        public System.Threading.Tasks.Task<MindWeaveClient.AuthenticationService.OperationResultDto> registerAsync(MindWeaveClient.AuthenticationService.UserProfileDto userProfile, string password) {
            return base.Channel.registerAsync(userProfile, password);
        }
        
        public MindWeaveClient.AuthenticationService.OperationResultDto verifyAccount(string email, string code) {
            return base.Channel.verifyAccount(email, code);
        }
        
        public System.Threading.Tasks.Task<MindWeaveClient.AuthenticationService.OperationResultDto> verifyAccountAsync(string email, string code) {
            return base.Channel.verifyAccountAsync(email, code);
        }
        
        public MindWeaveClient.AuthenticationService.OperationResultDto resendVerificationCode(string email) {
            return base.Channel.resendVerificationCode(email);
        }
        
        public System.Threading.Tasks.Task<MindWeaveClient.AuthenticationService.OperationResultDto> resendVerificationCodeAsync(string email) {
            return base.Channel.resendVerificationCodeAsync(email);
        }
        
        public MindWeaveClient.AuthenticationService.OperationResultDto sendPasswordRecoveryCode(string email) {
            return base.Channel.sendPasswordRecoveryCode(email);
        }
        
        public System.Threading.Tasks.Task<MindWeaveClient.AuthenticationService.OperationResultDto> sendPasswordRecoveryCodeAsync(string email) {
            return base.Channel.sendPasswordRecoveryCodeAsync(email);
        }
        
        public MindWeaveClient.AuthenticationService.OperationResultDto resetPasswordWithCode(string email, string code, string newPassword) {
            return base.Channel.resetPasswordWithCode(email, code, newPassword);
        }
        
        public System.Threading.Tasks.Task<MindWeaveClient.AuthenticationService.OperationResultDto> resetPasswordWithCodeAsync(string email, string code, string newPassword) {
            return base.Channel.resetPasswordWithCodeAsync(email, code, newPassword);
        }
        
        public void logOut(string username) {
            base.Channel.logOut(username);
        }
        
        public System.Threading.Tasks.Task logOutAsync(string username) {
            return base.Channel.logOutAsync(username);
        }
    }
}
