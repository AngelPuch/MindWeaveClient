//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MindWeaveClient.ProfileService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerProfileViewDto", Namespace="http://schemas.datacontract.org/2004/07/MindWeaveServer.Contracts.DataContracts.S" +
        "tats")]
    [System.SerializableAttribute()]
    public partial class PlayerProfileViewDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MindWeaveClient.ProfileService.AchievementDto[] achievementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string avatarPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MindWeaveClient.ProfileService.PlayerStatsDto statsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MindWeaveClient.ProfileService.AchievementDto[] achievements {
            get {
                return this.achievementsField;
            }
            set {
                if ((object.ReferenceEquals(this.achievementsField, value) != true)) {
                    this.achievementsField = value;
                    this.RaisePropertyChanged("achievements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string avatarPath {
            get {
                return this.avatarPathField;
            }
            set {
                if ((object.ReferenceEquals(this.avatarPathField, value) != true)) {
                    this.avatarPathField = value;
                    this.RaisePropertyChanged("avatarPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MindWeaveClient.ProfileService.PlayerStatsDto stats {
            get {
                return this.statsField;
            }
            set {
                if ((object.ReferenceEquals(this.statsField, value) != true)) {
                    this.statsField = value;
                    this.RaisePropertyChanged("stats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerStatsDto", Namespace="http://schemas.datacontract.org/2004/07/MindWeaveServer.Contracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class PlayerStatsDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int highestScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int puzzlesCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int puzzlesWonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan totalPlaytimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int highestScore {
            get {
                return this.highestScoreField;
            }
            set {
                if ((this.highestScoreField.Equals(value) != true)) {
                    this.highestScoreField = value;
                    this.RaisePropertyChanged("highestScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int puzzlesCompleted {
            get {
                return this.puzzlesCompletedField;
            }
            set {
                if ((this.puzzlesCompletedField.Equals(value) != true)) {
                    this.puzzlesCompletedField = value;
                    this.RaisePropertyChanged("puzzlesCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int puzzlesWon {
            get {
                return this.puzzlesWonField;
            }
            set {
                if ((this.puzzlesWonField.Equals(value) != true)) {
                    this.puzzlesWonField = value;
                    this.RaisePropertyChanged("puzzlesWon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan totalPlaytime {
            get {
                return this.totalPlaytimeField;
            }
            set {
                if ((this.totalPlaytimeField.Equals(value) != true)) {
                    this.totalPlaytimeField = value;
                    this.RaisePropertyChanged("totalPlaytime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AchievementDto", Namespace="http://schemas.datacontract.org/2004/07/MindWeaveServer.Contracts.DataContracts.S" +
        "tats")]
    [System.SerializableAttribute()]
    public partial class AchievementDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iconPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string iconPath {
            get {
                return this.iconPathField;
            }
            set {
                if ((object.ReferenceEquals(this.iconPathField, value) != true)) {
                    this.iconPathField = value;
                    this.RaisePropertyChanged("iconPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfileDto", Namespace="http://schemas.datacontract.org/2004/07/MindWeaveServer.Contracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class UserProfileDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] avatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int genderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] avatar {
            get {
                return this.avatarField;
            }
            set {
                if ((object.ReferenceEquals(this.avatarField, value) != true)) {
                    this.avatarField = value;
                    this.RaisePropertyChanged("avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                if ((this.dateOfBirthField.Equals(value) != true)) {
                    this.dateOfBirthField = value;
                    this.RaisePropertyChanged("dateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int genderId {
            get {
                return this.genderIdField;
            }
            set {
                if ((this.genderIdField.Equals(value) != true)) {
                    this.genderIdField = value;
                    this.RaisePropertyChanged("genderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultDto", Namespace="http://schemas.datacontract.org/2004/07/MindWeaveServer.Contracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class OperationResultDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProfileService.IProfileManager")]
    public interface IProfileManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileManager/getPlayerProfileView", ReplyAction="http://tempuri.org/IProfileManager/getPlayerProfileViewResponse")]
        MindWeaveClient.ProfileService.PlayerProfileViewDto getPlayerProfileView(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileManager/getPlayerProfileView", ReplyAction="http://tempuri.org/IProfileManager/getPlayerProfileViewResponse")]
        System.Threading.Tasks.Task<MindWeaveClient.ProfileService.PlayerProfileViewDto> getPlayerProfileViewAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileManager/getProfile", ReplyAction="http://tempuri.org/IProfileManager/getProfileResponse")]
        MindWeaveClient.ProfileService.UserProfileDto getProfile(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileManager/getProfile", ReplyAction="http://tempuri.org/IProfileManager/getProfileResponse")]
        System.Threading.Tasks.Task<MindWeaveClient.ProfileService.UserProfileDto> getProfileAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileManager/updateProfile", ReplyAction="http://tempuri.org/IProfileManager/updateProfileResponse")]
        MindWeaveClient.ProfileService.OperationResultDto updateProfile(string username, MindWeaveClient.ProfileService.UserProfileDto newProfileDtoData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileManager/updateProfile", ReplyAction="http://tempuri.org/IProfileManager/updateProfileResponse")]
        System.Threading.Tasks.Task<MindWeaveClient.ProfileService.OperationResultDto> updateProfileAsync(string username, MindWeaveClient.ProfileService.UserProfileDto newProfileDtoData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileManager/changePassword", ReplyAction="http://tempuri.org/IProfileManager/changePasswordResponse")]
        MindWeaveClient.ProfileService.OperationResultDto changePassword(string username, string currentPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileManager/changePassword", ReplyAction="http://tempuri.org/IProfileManager/changePasswordResponse")]
        System.Threading.Tasks.Task<MindWeaveClient.ProfileService.OperationResultDto> changePasswordAsync(string username, string currentPassword, string newPassword);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProfileManagerChannel : MindWeaveClient.ProfileService.IProfileManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProfileManagerClient : System.ServiceModel.ClientBase<MindWeaveClient.ProfileService.IProfileManager>, MindWeaveClient.ProfileService.IProfileManager {
        
        public ProfileManagerClient() {
        }
        
        public ProfileManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProfileManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MindWeaveClient.ProfileService.PlayerProfileViewDto getPlayerProfileView(string username) {
            return base.Channel.getPlayerProfileView(username);
        }
        
        public System.Threading.Tasks.Task<MindWeaveClient.ProfileService.PlayerProfileViewDto> getPlayerProfileViewAsync(string username) {
            return base.Channel.getPlayerProfileViewAsync(username);
        }
        
        public MindWeaveClient.ProfileService.UserProfileDto getProfile(string username) {
            return base.Channel.getProfile(username);
        }
        
        public System.Threading.Tasks.Task<MindWeaveClient.ProfileService.UserProfileDto> getProfileAsync(string username) {
            return base.Channel.getProfileAsync(username);
        }
        
        public MindWeaveClient.ProfileService.OperationResultDto updateProfile(string username, MindWeaveClient.ProfileService.UserProfileDto newProfileDtoData) {
            return base.Channel.updateProfile(username, newProfileDtoData);
        }
        
        public System.Threading.Tasks.Task<MindWeaveClient.ProfileService.OperationResultDto> updateProfileAsync(string username, MindWeaveClient.ProfileService.UserProfileDto newProfileDtoData) {
            return base.Channel.updateProfileAsync(username, newProfileDtoData);
        }
        
        public MindWeaveClient.ProfileService.OperationResultDto changePassword(string username, string currentPassword, string newPassword) {
            return base.Channel.changePassword(username, currentPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task<MindWeaveClient.ProfileService.OperationResultDto> changePasswordAsync(string username, string currentPassword, string newPassword) {
            return base.Channel.changePasswordAsync(username, currentPassword, newPassword);
        }
    }
}
